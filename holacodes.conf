server {
    listen       80 default_server;
    listen       [::]:80 default_server;
    server_name  holacodes.com;
    return       301 https://$server_name$request_uri;
    # root         /home/ubuntu/html;
    # Load configuration files for the default server block.
    location / {
    }
    error_page 404 /404.html;
        location = /40x.html {
    }
    error_page 500 502 503 504 /50x.html;
        location = /50x.html {
    }
}

# Settings for a TLS enabled server.
server {
    listen       443 ssl http2 default_server;
    listen       [::]:443 ssl http2 default_server;
    server_name  holacodes.com www.holacodes.com;
    if ($host != 'holacodes.com') {
        return 301 https://holacodes.com$request_uri;
    }
    # ssl config
    ssl on;
    ssl_certificate "/etc/nginx/conf.d/1_holacodes.com_bundle.crt";
    ssl_certificate_key "/etc/nginx/conf.d/2_holacodes.com.key";
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout  5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
    ssl_prefer_server_ciphers on;
    # gzip config
    gzip on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    # gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_types text/plain application/javascript application/x-javascript application/json application/octet-stream text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    gzip_vary on;
    gzip_disable "MSIE [1-6]\.";
    # Load configuration files for the default server block.
    include /etc/nginx/default.d/*.conf;

    location /api/ {
        # rewrite  ^.+apis/?(.*)$ /$1 break;
        include  uwsgi_params;
        proxy_pass http://localhost:8888;
        client_max_body_size   100m;
    }
    location /static/ {
        proxy_pass http://localhost:8888;
    }
    location /zh/ {
        alias /home/ubuntu/holacode/browser/zh/;
        try_files $uri $uri/ /zh/index.html;
    }
    location / {
        root /home/ubuntu/holacode/browser/en-US;
        index index.html;
        try_files $uri $uri/ /index.html;
        #proxy_pass http://localhost:4000;
        #proxy_http_version 1.1;
        #proxy_set_header Upgrade $http_upgrade;
        #proxy_set_header Connection 'upgrade';
        #proxy_set_header Host $host;
        #proxy_cache_bypass $http_upgrade;
    }
    location = /40x.html {
    }
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
    }
}
